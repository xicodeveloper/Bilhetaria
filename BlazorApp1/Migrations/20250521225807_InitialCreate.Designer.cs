// <auto-generated />
using System;
using BlazorApp1.Services.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorApp1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250521225807_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("BlazorApp1.Services.DataBase.DBEntities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IstheOne")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("addresses", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Services.DataBase.DBEntities.BasketItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Discount")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("OrderId");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("BlazorApp1.Services.DataBase.DBEntities.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ApiId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MoviePosterUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MovieTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("BlazorApp1.Services.DataBase.DBEntities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ShippingAddressId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShippingAddressId");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Services.DataBase.DBEntities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSucess")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Services.DataBase.DBEntities.WalletUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ApplePaySaldo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(100m);

                    b.Property<decimal>("CreditCardSaldo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(100m);

                    b.Property<decimal>("MbwaySaldo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(100m);

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("wallet_users", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Services.DataBase.DBEntities.BasketItems.DigitalMovie", b =>
                {
                    b.HasBaseType("BlazorApp1.Services.DataBase.DBEntities.BasketItem");

                    b.ToTable("digital_movies", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Services.DataBase.DBEntities.BasketItems.PhysicalMovie", b =>
                {
                    b.HasBaseType("BlazorApp1.Services.DataBase.DBEntities.BasketItem");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.ToTable("physical_movies", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Services.DataBase.DBEntities.BasketItems.RentalMovie", b =>
                {
                    b.HasBaseType("BlazorApp1.Services.DataBase.DBEntities.BasketItem");

                    b.Property<DateTime>("Validade")
                        .HasColumnType("TEXT");

                    b.ToTable("rental_movies", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Services.DataBase.DBEntities.BasketItems.TicketMovie", b =>
                {
                    b.HasBaseType("BlazorApp1.Services.DataBase.DBEntities.BasketItem");

                    b.Property<string>("Seat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ViewingDate")
                        .HasColumnType("TEXT");

                    b.ToTable("ticket_movies", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.Services.DataBase.DBEntities.Address", b =>
                {
                    b.HasOne("BlazorApp1.Services.DataBase.DBEntities.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorApp1.Services.DataBase.DBEntities.BasketItem", b =>
                {
                    b.HasOne("BlazorApp1.Services.DataBase.DBEntities.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BlazorApp1.Services.DataBase.DBEntities.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BlazorApp1.Services.DataBase.DBEntities.Order", b =>
                {
                    b.HasOne("BlazorApp1.Services.DataBase.DBEntities.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ShippingAddress");
                });

            modelBuilder.Entity("BlazorApp1.Services.DataBase.DBEntities.WalletUser", b =>
                {
                    b.HasOne("BlazorApp1.Services.DataBase.DBEntities.User", "User")
                        .WithOne("Wallet")
                        .HasForeignKey("BlazorApp1.Services.DataBase.DBEntities.WalletUser", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorApp1.Services.DataBase.DBEntities.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("BlazorApp1.Services.DataBase.DBEntities.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Wallet")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
