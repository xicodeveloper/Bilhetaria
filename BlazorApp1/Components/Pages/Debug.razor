@page "/debug"
@using System.Security.Claims
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@attribute [Authorize]
@inject AuthenticationStateProvider AuthStateProvider

<h3>Suas Claims</h3>

@if (claims.Any())
{
    <table class="table">
        <thead>
        <tr>
            <th>Tipo</th>
            <th>Valor</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var claim in claims)
        {
            <tr>
                <td>@claim.Type</td>
                <td>@claim.Value</td>
            </tr>
        }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-warning">Nenhuma claim encontrada</div>
}

@code {
    private List<Claim> claims = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadClaims();
    }

    private async Task LoadClaims()
    {
        try
        {
            var authState = await AuthStateProvider.GetAuthenticationStateAsync();
            claims = authState.User.Claims.ToList();
            
            // Forçar atualização da UI
            StateHasChanged();
            
     
        }
        catch (Exception ex)
        {
            
        }
    }
}