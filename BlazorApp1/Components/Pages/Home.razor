@page "/"
@using BlazorApp1.Services.Movies
@using Microsoft.AspNetCore.Authorization
@inject IConfiguration Configuration
@inject HttpClient Http
@inherits BlazorApp1.Components.Layout.MainLayout
@inject IHttpContextAccessor HttpContextAccessor
@inject IJSRuntime JS
@implements IDisposable
@attribute [Authorize]
@rendermode  InteractiveServer

<div class="homepage-container">

    <!-- Featured Movie Section -->
    <section class="featured-section">
        <h2 class="featured-title">Minions 4</h2>
        <div class="relevance">99% relevância</div>
        <div class="divider"></div>
        <div class="action-buttons">
            <div class="btn-container">
                <button class="btn alugar">ALUGAR</button>
                <svg class="btn-line" xmlns="http://www.w3.org/2000/svg" width="156" height="52" viewBox="0 0 156 52" fill="none">
                    <path d="M1 49L155 3" stroke="#F5F5F5" stroke-opacity="0.45" stroke-width="5"/>
                </svg>
            </div>

            <div class="btn-container">
                <button class="btn comprar">COMPRAR</button>
                <svg class="btn-line" xmlns="http://www.w3.org/2000/svg" width="156" height="52" viewBox="0 0 156 52" fill="none">
                    <path d="M1 49L155 3" stroke="#F5F5F5" stroke-opacity="0.45" stroke-width="5"/>
                </svg>
            </div>
            <button class="btn bilhetes">BILHETES (7.50€)</button>
            <svg class="info-icon" xmlns="http://www.w3.org/2000/svg" width="33" height="33" viewBox="0 0 33 33" fill="none">
                <path d="M16.5 31.0834C24.5542 31.0834 31.0834 24.5542 31.0834 16.5001C31.0834 8.44593 24.5542 1.91675 16.5 1.91675C8.44587 1.91675 1.91669 8.44593 1.91669 16.5001C1.91669 24.5542 8.44587 31.0834 16.5 31.0834Z" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M16.5 22.3333V16.5" stroke="white" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M16.5 10.6667H16.5146" stroke="white" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
        </div>
    </section>

    <!-- Popular Movies Section -->
    <section class="movies-section">
        <h3 class="section-title">Mais Populares</h3>
        <div class="movies-carousel" @ref="carouselContainer">
            <div class="carousel-track">
                @if (_movies != null)
                {
                    @foreach (var movie in _movies.Take(25))
                    {
                        <div class="carousel-item">
                            <NavLink href="@($"movie/{movie.Id}?price={GetRandomPrice(movie.Id)}&hash={DiscountHasher.GenerateHash(movie.Id, GetRandomPrice(movie.Id))}")">
                                <img src="@(LinkImage + movie.PosterPath)" alt="@movie.Title" class="movie-poster"/>
                                <div class="movie-hover-info">
                                    <h4>@movie.Title</h4>
                                    <p>💰 @GetRandomPrice(movie.Id)</p>
                                    <p>⭐ @movie.VoteAverage.ToString("0.0")</p>
                                </div>
                            </NavLink>
                        </div>
                    }
                }
                else
                {
                    <p>A carregar filmes...</p>
                }
            </div>
        </div>
        <div class="carousel-nav">
            <button class="carousel-btn prev" @onclick="() => ScrollCarousel(-1)">◀</button>
            <button class="carousel-btn next" @onclick="() => ScrollCarousel(1)">▶</button>
        </div>
    </section>

    <!-- Promotions Section -->
    <section class="movies-section">
        <h3 class="section-title">Promoções</h3>
        <div class="movies-carousel" @ref="promoCarouselContainer">
            <div class="carousel-track">
                @if (_movies != null)
                {
                    @foreach (var movie in _movies.Skip(7).Take(25))
                    {
                        var price = GetRandomPrice(movie.Id);
                        var hash = DiscountHasher.GenerateHash(movie.Id, price);
                        <div class="carousel-item">
                            <!-- Seção Promoções-->
                            <NavLink href="@($"movie/{movie.Id}?price={price}&discount={GetDeterministicDiscount(movie.Id)}&hash={DiscountHasher.GenerateHash(movie.Id, price, GetDeterministicDiscount(movie.Id))}")">
                                <span class="discount-tag">@GetDeterministicDiscount(movie.Id)%</span>
                                <img src="@(LinkImage + movie.PosterPath)" alt="@movie.Title" class="movie-poster"/>
                                <div class="movie-hover-info">
                                    <h4>@movie.Title</h4>
                                    <p>💰 @price</p>
                                    <p>⭐ @movie.VoteAverage.ToString("0.0")</p>
                                </div>
                            </NavLink>
                        </div>
                    }
                }
            </div>
        </div>
        <div class="carousel-nav">
            <button class="carousel-btn prev" @onclick="() => ScrollPromoCarousel(-1)">◀</button>
            <button class="carousel-btn next" @onclick="() => ScrollPromoCarousel(1)">▶</button>
        </div>
    </section>

    <!-- Coming Soon Section -->
    <section class="movies-section">
        <h3 class="section-title">Coming Soon</h3>
        <div class="movies-carousel" @ref="comingSoonCarouselContainer">
            <div class="carousel-track">
                @if (_movies != null)
                {
                    @foreach (var movie in _movies.Skip(14).Take(25))
                    {
                        <div class="carousel-item">
                            <NavLink href="@($"movie/{movie.Id}?price={GetRandomPrice(movie.Id)}&hash={DiscountHasher.GenerateHash(movie.Id, GetRandomPrice(movie.Id))}")">
                                <img src="@(LinkImage + movie.PosterPath)" alt="@movie.Title" class="movie-poster"/>
                                <div class="movie-hover-info">
                                    <h4>@movie.Title</h4>
                                    <p>💰 @GetRandomPrice(movie.Id)</p>
                                    <p>⭐ @movie.VoteAverage.ToString("0.0")</p>
                                </div>
                            </NavLink>
                        </div>
                    }
                }
            </div>
        </div>
        <div class="carousel-nav">
            <button class="carousel-btn prev" @onclick="() => ScrollComingSoonCarousel(-1)">◀</button>
            <button class="carousel-btn next" @onclick="() => ScrollComingSoonCarousel(1)">▶</button>
        </div>
    </section>

    @* <!-- Newsletter Section --> corrigir isto *@
    <section class="footer-newsletter-container">
        <!-- Footer (lado esquerdo) -->
        <div class="footer-left">
            <p class="footer-text">© melhor conteúdo de séries para ti</p>
            <p class="copyright">
                © 2025 - Todos os direitos reservados - CinUMa
            </p>
            <div class="footer-links">
                <a href="#">Termos de serviço</a>
                <a href="#">Política de privacidade</a>
            </div>
        </div>

        <!-- Newsletter (lado direito) -->
        <div class="newsletter-right">
            <h3 class="newsletter-title">Newsletter</h3>
            <p class="newsletter-text">Inscreve-te no nosso newsletter</p>
            <div class="newsletter-form">
                <input type="email" placeholder="Email" />
            </div>
        </div>
    </section>
</div>

@code {
    private string ApIlink => $"{Configuration["TmdbApi:BaseUrl"]}/movie/popular";
    private string LinkImage => Configuration["TmdbApi:ImageBaseUrl"] ?? string.Empty;
    private List<Film>? _movies;
    private MovieDeserializer deserializer = new MovieDeserializer();

    private ElementReference carouselContainer;
    private ElementReference promoCarouselContainer;
    private ElementReference comingSoonCarouselContainer;
    private int currentIndex = 0;
    private int promoCurrentIndex = 0;
    private int comingSoonCurrentIndex = 0;

    
    private readonly string[] _discountTiers = { "10", "70", "25" };
    
    private readonly string [] _prices = { "2.99", "4.99", "9.99", "14.99" };
    
    private string GetRandomPrice(int movieId) {
        int index = movieId % _prices.Length;
        return _prices[index];
    }

    private string GetDeterministicDiscount(int movieId) {
        // Cálculo determinístico baseado no ID do filme
        int index = movieId % _discountTiers.Length;
        return _discountTiers[index];
    }

    private async Task ScrollCarousel(int direction)
    {
        currentIndex += direction;
        if (currentIndex < 0) currentIndex = 0;
        await JS.InvokeVoidAsync("scrollCarousel", carouselContainer, currentIndex);
    }

    private async Task ScrollPromoCarousel(int direction)
    {
        promoCurrentIndex += direction;
        if (promoCurrentIndex < 0) promoCurrentIndex = 0;
        await JS.InvokeVoidAsync("scrollCarousel", promoCarouselContainer, promoCurrentIndex);
    }

    private async Task ScrollComingSoonCarousel(int direction)
    {
        comingSoonCurrentIndex += direction;
        if (comingSoonCurrentIndex < 0) comingSoonCurrentIndex = 0;
        await JS.InvokeVoidAsync("scrollCarousel", comingSoonCarouselContainer, comingSoonCurrentIndex);
    }
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = deserializer.FetchPopularMovies(ApIlink);
            _movies = response.Results;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro: {ex.Message}");
        }
    }

    public void Dispose()
    {
        deserializer?.Dispose();
    }
}

<script>
    function scrollCarousel(element, direction) {
        const scrollAmount = 300; // Ajuste conforme necessário
        element.scrollBy({
            left: scrollAmount * direction,
            behavior: 'smooth'
        });
    }
</script>